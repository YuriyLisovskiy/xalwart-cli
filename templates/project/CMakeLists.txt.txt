cmake_minimum_required(VERSION <% .CMakeMinimumVersion %>)

set(CMAKE_CXX_STANDARD <% .CMakeCPPStandard %>)

project(<% .ProjectName %>)
set(BINARY application)

# Load and filter project sources.
file(
    GLOB_RECURSE SOURCES
    LIST_DIRECTORIES true
    */*.h */*.cpp
)
list(
	FILTER SOURCES
	EXCLUDE REGEX "^.*/(include|lib$|media|static|templates|cmake-build-*)/?.*"
)
foreach(entry ${SOURCES})
    if (IS_DIRECTORY ${entry})
        list(REMOVE_ITEM SOURCES ${entry})
    else()
        message(${entry})
    endif()
endforeach()
<% if .UseConan %>
include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

add_executable(${BINARY} ${SOURCES} "./main.cpp")
target_link_libraries(${BINARY} ${CONAN_LIBS})
<% else %>
add_executable(${BINARY} ${SOURCES} "./main.cpp")

<% .CMakeListsTxtToDoLine %>
<% end %>
# Required for <experimental/filesystem> in Unix which is used by '<% .FrameworkName %>'
if (UNIX)
    target_link_libraries(${BINARY} stdc++fs)
endif()
