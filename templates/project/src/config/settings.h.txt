<% .Header.CLikeCopyrightNotice %>

#pragma once

// <% .Header.FrameworkName %>
#include <<% .Header.FrameworkName %>/conf/settings.h>


class Settings : public <% .Header.FrameworkNamespace %>::conf::Settings
{
public:
	void register_modules() override;

	std::unique_ptr<<% .Header.FrameworkNamespace %>::server::IServer> build_server(
	    const std::function<<% .Header.FrameworkNamespace %>::net::StatusCode(
		    <% .Header.FrameworkNamespace %>::net::RequestContext*, const std::map<std::string, std::string>& /* environment */
	    )>& handler,
	    const <% .Header.FrameworkNamespace %>::Options& options
	) override;

	static std::unique_ptr<Settings> load();
};
