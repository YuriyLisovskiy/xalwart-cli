<% .Header.CopyrightNotice %>

#pragma once

// <% .Header.FrameworkName %>
#include <<% .Header.FrameworkName %>.base/interfaces/base.h>
#include <<% .Header.FrameworkName %>/commands/command.h>


class <% .ClassName %> : public <% .Header.FrameworkNamespace %>::cmd::Command
{
public:
	inline explicit <% .ClassName %>(const std::shared_ptr<<% .Header.FrameworkNamespace %>::ILogger>& logger) :
        <% .Header.FrameworkNamespace %>::cmd::Command("<% .Name | to_snake_case %>", "Calls '<% .Name | to_snake_case %>' command", logger)
	{
	}

protected:
	void add_flags() override;

	void validate() const override;

	bool handle() override;
};
