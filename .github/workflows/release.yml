name: Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Build the App
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - 1.17.x
        target_os:
          - linux
          - darwin
        target_arch:
          - arm64
          - amd64
    env:
      BUILD_DIR: ./build
      ARCHIVE_PREFIX: xalwart-cli
      APP_NAME: xalwart
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Build
        run: |
          mkdir -p $BUILD_DIR
          GOOS=${{ matrix.target_os }} GOARCH=${{ matrix.target_arch }} \
            go build -o $BUILD_DIR/${{ env.APP_NAME }} ./xalwart/main.go
      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Create an archive for release
        run: |
          tar -cvzf ${{ env.ARCHIVE_PREFIX }}-${{ steps.tag_name.outputs.SOURCE_TAG }}-${{ matrix.target_os }}-${{ matrix.target_arch }}.tar.gz \
              LICENSE -C $BUILD_DIR ${{ env.APP_NAME }}
      - name: Upload an archive to artifacts for release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARCHIVE_PREFIX }}-${{ steps.tag_name.outputs.SOURCE_TAG }}-${{ matrix.target_os }}-${{ matrix.target_arch }}
          path: ${{ env.ARCHIVE_PREFIX }}-${{ steps.tag_name.outputs.SOURCE_TAG }}-${{ matrix.target_os }}-${{ matrix.target_arch }}.tar.gz
          retention-days: 1
  create_release:
    needs: build
    name: Upload Release Assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Create release notes
        run: |
          git log $(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))..${{ steps.tag_name.outputs.SOURCE_TAG }} --oneline > ./release-notes.txt
          test -s ./release-notes.txt && printf '%s\n%s\n\n' "## Changelog" "$(cat ./release-notes.txt)" > ./release-notes.txt
          echo 'To explore all features of this application release, check out the [documentation](https://github.com/YuriyLisovskiy/xalwart-cli/wiki).' >> ./release-notes.txt
          cat ./release-notes.txt
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./archives
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.SOURCE_TAG }}
          body_path: ./release-notes.txt
          draft: false
          prerelease: false
          files: |
            ./archives/*/*.tar.gz
